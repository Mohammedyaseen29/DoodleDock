// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  rooms     Room[]
  chats     Chat[]
}

model Room{
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  chats     Chat[]
  canvasStates CanvasState[] 
  @@map("rooms")
}

model Chat{
  id      Int         @id  @default(autoincrement())
  message String
  createdAt DateTime @default(now())
  userId   String
  user     User     @relation(fields: [userId], references: [id])
  roomId   String
  room     Room     @relation(fields: [roomId], references: [id])
}

model CanvasState {
  id        String   @id @default(cuid())
  roomId    String
  shapes    Json     // Store the shapes array as JSON
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  room      Room     @relation(fields: [roomId], references: [id], onDelete: Cascade)
  
  @@map("canvas_states")
}
